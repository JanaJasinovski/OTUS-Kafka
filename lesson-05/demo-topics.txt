0) Запуск кластера Kafka
ssh kafka1, kafka2, kafka3
    sudo systemctl start zookeeper
    systemctl status zookeeper
    sudo systemctl start kafka
    systemctl status kafka

1) Основные операции с топиками
kafka-topics.sh --list --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092
kafka-topics.sh --create --topic test --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092
kafka-topics.sh --describe --topic test --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092
kafka-topics.sh --describe --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092
kafka-topics.sh --describe --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092 --exclude-internal
kafka-topics.sh --alter --topic test --partitions 3 --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092
kafka-topics.sh --describe --topic test --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092

2) Репликация
2.1) Создаём топики t31 и t33
kafka-topics.sh --create --topic t31 --partitions 3 --replication-factor 1 --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092
kafka-topics.sh --create --topic t33 --partitions 3 --replication-factor 3 --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092

2.2) Роняем брокер 2:
ssh kafka2
    sudo systemctl stop kafka
    sudo systemctl status kafka

2.3) Проверяем сотояние топиков
kafka-topics.sh --describe --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092

2.4) Поднимаем брокер 2:
ssh kafka2
    sudo systemctl start kafka
    sudo systemctl status kafka

2.5) Проверяем сотояние топиков
kafka-topics.sh --describe --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092

3) Данные в топиках

3.1) Выводим информацию о хранении топика
kafka-log-dirs.sh --topic-list test --describe --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092
kafka-log-dirs.sh --topic-list test --describe --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092 | tail -1 | jq

3.2) Подключаемся к брокеру 1 и проверяем папки для топика test
ssh kafka1
    ls -la data/kafka-logs/test-*

3.3) Отправим сообщения в топик test
kafka-producer-perf-test.sh --topic test --num-records 1000 --record-size 10 --throughput -1 --producer-props bootstrap.servers=kafka1:9092,kafka2:9092,kafka3:9092

3.4) Подключаемся к брокеру 1 и проверяем папки для топика test
ssh kafka1
    ls -la data/kafka-logs/test-*

3.5) Выведем информацию о смещениях топика test
kafka-get-offsets.sh --topic test --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092

3.6) Прочитаем сообщения в топике test
kafka-console-consumer.sh --topic test --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092 --from-beginning --property print.offset=true --property print.partition=true

3.7) Посмотрим на содержимое журнала на брокере 1 (номер партиции с данными может быть другим)
ssh kafka1
    cd data/kafka-logs/test-2
    kafka-dump-log.sh --files 00000000000000000000.log
    kafka-dump-log.sh --print-data-log --files 00000000000000000000.log

3.8) Удалим сообщения из топика test
kafka-delete-records.sh --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092 --offset-json-file deleteme.json

3.5) Выведем информацию о смещениях топика test
kafka-get-offsets.sh --topic test --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092

3.6) Прочитаем сообщения в топике test
kafka-console-consumer.sh --topic test --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092 --from-beginning --property print.offset=true --property print.key=true --property print.partition=true

4) Параметры
kafka-configs.sh --describe --all --topic test --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092
kafka-configs.sh --describe --all --topic test --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092 | sort
kafka-configs.sh --describe --entity-type topics --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092
kafka-configs.sh --alter --add-config delete.retention.ms=10 --topic test --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092
kafka-configs.sh --describe --all --topic test --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092 | sort
kafka-configs.sh --describe delete.retention.ms --topic test --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092
kafka-configs.sh --alter --add-config delete.retention.ms=604800000 --topic test --bootstrap-server kafka1:9092,kafka2:9092,kafka3:9092
